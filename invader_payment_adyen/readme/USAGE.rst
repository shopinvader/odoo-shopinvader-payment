This has been developed following https://docs.adyen.com/checkout/drop-in-web
and will allow to get automatic payment form generated by Adyen like:

.. image:: https://user-images.githubusercontent.com/19529533/67020136-02274c00-f0fe-11e9-972b-25014d0cae5c.png

Four services are exposed to manage payments with Adyen.

Here are the services (that can be explored and tested with Swagger):

* paymentMethods

    * This will call Adyen to retrieve all backend configured payment methods
      that correspond to the "payable" object
      (in terms of amount, country, currency, ... see Adyen)

    * This takes as parameters:

        * target: (eg.: "current_cart")
        * payment_mode_id: The Adyen payment mode


    * This will return a dict containing payment methods that are activated
      on the Adyen backend and intended to be passed to the drop-in widget.

.. code:: python

    {
     "paymentMethods":[
      {
        "details":[...],
        "name":"Credit Card",
        "type":"scheme"
        ...
      },
      {
        "details":[...],
        "name":"SEPA Direct Debit",
        "type":"sepadirectdebit"
      },
      ...
      ]
    }

* payments

    * This will initiate the payment itself.

    * This takes as parameters:

        * target: (eg.: "current_cart")
        * payment_mode_id: The Adyen payment mode
        * transaction_id: The current transaction
        * payment_method: The Adyen payment method chosen (bcmc, scheme, ...)
        * return_url: The url to return to in case of redirection

    * This will return a dict containing payment response containing :

.. code:: python

    {
      "resultCode":"IdentifyShopper",
      "action":{
        "paymentMethodType":"scheme",
        "token":"eyJ0aHJlZURTTWV0aG9kTm90aWZpY...",
        "type":"threeDS2Fingerprint"
      },
      "authentication":{
        "threeds2.fingerprintToken":"eyJ0aHJlZURTTWV0aG9kTm90aWZpY..."
      },
      "details":[
        {
          "key":"threeds2.fingerprint",
          "type":"text"
        }
      ],
      "paymentData":"Ab02b4c0!BQABAgCuZFJrQOjSsl\/zt+..."
    }

* payment_details

    * This will allow to pass further details required by provider

    * This takes as parameters:

        * data
        * transaction_id

    * This will return :

.. code:: python

    {
     data: {
        details: {
          threeds2.fingerprint: "eyJ0aHJlZURTQ29tcEluZCI6IlkifQ=="
        },
        paymentData: "Ab02b4c0!BQABAgAKspbjN8+5..."
     }
    }
